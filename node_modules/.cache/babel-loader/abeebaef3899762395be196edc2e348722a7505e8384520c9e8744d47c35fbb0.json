{"ast":null,"code":"export default {\n  name: \"RainEffect\",\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      width: 0,\n      height: 0,\n      arr: [],\n      str: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\".split(\"\")\n    };\n  },\n  mounted() {\n    this.initCanvas();\n    window.addEventListener(\"resize\", this.resizeCanvas);\n    setInterval(this.rain, 30);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.resizeCanvas);\n  },\n  methods: {\n    initCanvas() {\n      this.canvas = this.$refs.myCanvas;\n      this.width = this.canvas.offsetWidth;\n      this.height = this.canvas.offsetHeight;\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.arr = Array(Math.ceil(this.width / 10)).fill(0);\n    },\n    rain() {\n      this.ctx.fillStyle = \"rgba(0,0,0,0.05)\";\n      this.ctx.fillRect(0, 0, this.width, this.height);\n      this.ctx.fillStyle = \"rgba(0, 128, 0, 1)\";\n      this.ctx.font = \"16px Arial\"; // 注意：'h3 Arial' 不是一个有效的字体大小，我改为 '16px Arial'\n\n      this.arr.forEach((value, index) => {\n        const char = this.str[Math.floor(Math.random() * this.str.length)];\n        const x = index * 10;\n        const y = value + 10;\n        if (y >= this.height || Math.random() > 0.98) {\n          this.arr[index] = 0;\n        } else {\n          this.arr[index] = y;\n        }\n        this.ctx.fillText(char, x, y);\n      });\n    },\n    resizeCanvas() {\n      this.initCanvas(); // 重新初始化画布以适应新的窗口大小\n    }\n  }\n};","map":{"version":3,"names":["name","data","canvas","ctx","width","height","arr","str","split","mounted","initCanvas","window","addEventListener","resizeCanvas","setInterval","rain","beforeDestroy","removeEventListener","methods","$refs","myCanvas","offsetWidth","offsetHeight","getContext","Array","Math","ceil","fill","fillStyle","fillRect","font","forEach","value","index","char","floor","random","length","x","y","fillText"],"sources":["src/views/test/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"rainbk\">\r\n    <canvas ref=\"myCanvas\"></canvas>\r\n  </div>\r\n</template>  \r\n  \r\n<script>\r\nexport default {\r\n  name: \"RainEffect\",\r\n  data() {\r\n    return {\r\n      canvas: null,\r\n      ctx: null,\r\n      width: 0,\r\n      height: 0,\r\n      arr: [],\r\n      str: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\".split(\"\")\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initCanvas();\r\n    window.addEventListener(\"resize\", this.resizeCanvas);\r\n    setInterval(this.rain, 30);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener(\"resize\", this.resizeCanvas);\r\n  },\r\n  methods: {\r\n    initCanvas() {\r\n      this.canvas = this.$refs.myCanvas;\r\n      this.width = this.canvas.offsetWidth;\r\n      this.height = this.canvas.offsetHeight;\r\n      this.canvas.width = this.width;\r\n      this.canvas.height = this.height;\r\n      this.ctx = this.canvas.getContext(\"2d\");\r\n      this.arr = Array(Math.ceil(this.width / 10)).fill(0);\r\n    },\r\n    rain() {\r\n      this.ctx.fillStyle = \"rgba(0,0,0,0.05)\";\r\n      this.ctx.fillRect(0, 0, this.width, this.height);\r\n      this.ctx.fillStyle = \"rgba(0, 128, 0, 1)\";\r\n      this.ctx.font = \"16px Arial\"; // 注意：'h3 Arial' 不是一个有效的字体大小，我改为 '16px Arial'\r\n\r\n      this.arr.forEach((value, index) => {\r\n        const char = this.str[Math.floor(Math.random() * this.str.length)];\r\n        const x = index * 10;\r\n        const y = value + 10;\r\n\r\n        if (y >= this.height || Math.random() > 0.98) {\r\n          this.arr[index] = 0;\r\n        } else {\r\n          this.arr[index] = y;\r\n        }\r\n\r\n        this.ctx.fillText(char, x, y);\r\n      });\r\n    },\r\n    resizeCanvas() {\r\n      this.initCanvas(); // 重新初始化画布以适应新的窗口大小\r\n    }\r\n  }\r\n};\r\n</script>  \r\n  \r\n<style scoped>\r\n.rainbk {\r\n  height: 100%;\r\n  width:100%;\r\n  margin: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n</style>"],"mappings":"AAOA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,GAAA;MACAC,KAAA;MACAC,MAAA;MACAC,GAAA;MACAC,GAAA,yCAAAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;IACAC,WAAA,MAAAC,IAAA;EACA;EACAC,cAAA;IACAL,MAAA,CAAAM,mBAAA,gBAAAJ,YAAA;EACA;EACAK,OAAA;IACAR,WAAA;MACA,KAAAR,MAAA,QAAAiB,KAAA,CAAAC,QAAA;MACA,KAAAhB,KAAA,QAAAF,MAAA,CAAAmB,WAAA;MACA,KAAAhB,MAAA,QAAAH,MAAA,CAAAoB,YAAA;MACA,KAAApB,MAAA,CAAAE,KAAA,QAAAA,KAAA;MACA,KAAAF,MAAA,CAAAG,MAAA,QAAAA,MAAA;MACA,KAAAF,GAAA,QAAAD,MAAA,CAAAqB,UAAA;MACA,KAAAjB,GAAA,GAAAkB,KAAA,CAAAC,IAAA,CAAAC,IAAA,MAAAtB,KAAA,QAAAuB,IAAA;IACA;IACAZ,KAAA;MACA,KAAAZ,GAAA,CAAAyB,SAAA;MACA,KAAAzB,GAAA,CAAA0B,QAAA,YAAAzB,KAAA,OAAAC,MAAA;MACA,KAAAF,GAAA,CAAAyB,SAAA;MACA,KAAAzB,GAAA,CAAA2B,IAAA;;MAEA,KAAAxB,GAAA,CAAAyB,OAAA,EAAAC,KAAA,EAAAC,KAAA;QACA,MAAAC,IAAA,QAAA3B,GAAA,CAAAkB,IAAA,CAAAU,KAAA,CAAAV,IAAA,CAAAW,MAAA,UAAA7B,GAAA,CAAA8B,MAAA;QACA,MAAAC,CAAA,GAAAL,KAAA;QACA,MAAAM,CAAA,GAAAP,KAAA;QAEA,IAAAO,CAAA,SAAAlC,MAAA,IAAAoB,IAAA,CAAAW,MAAA;UACA,KAAA9B,GAAA,CAAA2B,KAAA;QACA;UACA,KAAA3B,GAAA,CAAA2B,KAAA,IAAAM,CAAA;QACA;QAEA,KAAApC,GAAA,CAAAqC,QAAA,CAAAN,IAAA,EAAAI,CAAA,EAAAC,CAAA;MACA;IACA;IACA1B,aAAA;MACA,KAAAH,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}