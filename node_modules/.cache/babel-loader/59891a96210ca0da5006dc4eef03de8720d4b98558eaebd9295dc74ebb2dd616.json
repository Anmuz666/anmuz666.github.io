{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      downData: [],\n      //存放路由获取的信息\n      downFrom: {} //更具uuid获取具体信息\n    };\n  },\n  components: {},\n  created() {\n    this.downData = JSON.parse(this.$route.query.data); //通过路由获取uuid\n    this.getByFrom(); //获取具体信息\n  },\n  mounted() {},\n  methods: {\n    //更具uuid获取具体信息\n    getByFrom() {\n      axios.get(`/DownloadJson/${this.downData[0].uuid}.json`).then(res => {\n        this.downFrom = res.data.data[0];\n      });\n    },\n    down() {\n      //点击下载\n      // downloadd(row) {\n      //   if(row.date==1){\n      var a = document.createElement(\"a\"); // 创建一个<a></a>标签\n      // a.href = '/doc/ec1c159316a047Ws.doc'\n      a.href = `/${this.downFrom.address}`; //重点（如测试发现下载文件不存在/找不到，检查路径）\n      a.download = `${this.downFrom.fileName}`; // 设置下载文件文件名\n      a.style.display = \"none\"; // 隐藏a标签\n      document.body.appendChild(a); // 将a标签追加到文档对象中\n      a.click(); // 模拟点击了a标签，会触发a标签的href的读取，浏览器就会自动下载了\n      a.remove(); // 一次性的，用完就删除a标签\n      //   }\n      // },\n    },\n    goBack() {\n      this.$router.back();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","downData","downFrom","components","created","JSON","parse","$route","query","getByFrom","mounted","methods","get","uuid","then","res","down","a","document","createElement","href","address","download","fileName","style","display","body","appendChild","click","remove","goBack","$router","back"],"sources":["src/views/center/otherPage/localDownload.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100%;background-color: #f2f2f2;\">\r\n    <el-container style=\"height: 100%;\">\r\n      <el-header\r\n        style=\"height: 50px;  font-size: 25px;color: #141e46;background:rgb(250,251,255);padding:0px 0px 0px 10px\"\r\n      >\r\n        <div style=\"height:100%;\">\r\n          <div style=\"float: left;line-height:55px;\">\r\n            <i class=\"el-icon-arrow-left\" style=\"cursor:pointer\" @click=\"goBack()\"></i>\r\n          </div>\r\n          <div style=\"float: left;\"></div>\r\n          <!-- <router-link to=\"/home/testMap\">\r\n                <div>我是a组件</div>\r\n          </router-link>-->\r\n        </div>\r\n      </el-header>\r\n      <el-main style=\"background:rgb(243,245,251)\">\r\n        <el-card class=\"box-card\">\r\n          <h3 style=\"border-bottom: 1px solid #e8e8e8;\">{{ downFrom.fileName }}</h3>\r\n          <div class=\"container\">\r\n            <div class=\"item left-item\">\r\n              文件大小:\r\n              <span>{{ downFrom.fileSize }}</span>\r\n            </div>\r\n            <div class=\"item\">\r\n              文件类型:\r\n              <span>{{ downFrom.fileType }}</span>\r\n            </div>\r\n            <div class=\"item left-item last-item\">\r\n              下载方式:\r\n              <span>{{ downFrom.downMode }}</span>\r\n            </div>\r\n            <!-- <div class=\"item\">3</div> -->\r\n            <div class=\"item left-item last-item\">\r\n              下载地址:\r\n              <el-link type=\"primary\" @click=\"down()\">点击下载</el-link>\r\n              <!-- <el-button type=\"text\" >点击下载</el-button> -->\r\n            </div>\r\n            <el-image\r\n                v-for=\"URL in item.imgurl.slice(0, 3)\"\r\n                style=\"height:68px;width:30%;display:inline-block;margin-right:6px\"\r\n                :src=\"URL.url\"\r\n                :fit=\"'cover'\"\r\n              ></el-image>\r\n          </div>\r\n          <!-- <el-link type=\"primary\" :href=\"downFrom.address\" target=\"_blank\">去下载</el-link> -->\r\n        </el-card>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n    \r\n  <script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      downData: [], //存放路由获取的信息\r\n      downFrom: {} //更具uuid获取具体信息\r\n    };\r\n  },\r\n  components: {},\r\n  created() {\r\n    this.downData = JSON.parse(this.$route.query.data); //通过路由获取uuid\r\n    this.getByFrom(); //获取具体信息\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    //更具uuid获取具体信息\r\n    getByFrom() {\r\n      axios.get(`/DownloadJson/${this.downData[0].uuid}.json`).then(res => {\r\n        this.downFrom = res.data.data[0];\r\n      });\r\n    },\r\n    down() {\r\n      //点击下载\r\n      // downloadd(row) {\r\n      //   if(row.date==1){\r\n      var a = document.createElement(\"a\"); // 创建一个<a></a>标签\r\n      // a.href = '/doc/ec1c159316a047Ws.doc'\r\n      a.href = `/${this.downFrom.address}`; //重点（如测试发现下载文件不存在/找不到，检查路径）\r\n      a.download = `${this.downFrom.fileName}`; // 设置下载文件文件名\r\n      a.style.display = \"none\"; // 隐藏a标签\r\n      document.body.appendChild(a); // 将a标签追加到文档对象中\r\n      a.click(); // 模拟点击了a标签，会触发a标签的href的读取，浏览器就会自动下载了\r\n      a.remove(); // 一次性的，用完就删除a标签\r\n      //   }\r\n      // },\r\n    },\r\n    goBack() {\r\n      this.$router.back();\r\n    }\r\n  }\r\n};\r\n</script>\r\n    \r\n<style scoped>\r\n.container {\r\n  font-size: 14px;\r\n  text-align: left;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 10px;\r\n}\r\n.container span {\r\n  font-weight: bold;\r\n}\r\n\r\n.item {\r\n  text-align: left;\r\n}\r\n.left-item {\r\n  padding-left: 20px;\r\n}\r\n.last-item {\r\n  grid-column: span 2;\r\n}\r\n</style>"],"mappings":"AAqDA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,QAAA;IACA;EACA;EACAC,UAAA;EACAC,QAAA;IACA,KAAAH,QAAA,GAAAI,IAAA,CAAAC,KAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAR,IAAA;IACA,KAAAS,SAAA;EACA;EACAC,QAAA;EACAC,OAAA;IACA;IACAF,UAAA;MACAV,KAAA,CAAAa,GAAA,uBAAAX,QAAA,IAAAY,IAAA,SAAAC,IAAA,CAAAC,GAAA;QACA,KAAAb,QAAA,GAAAa,GAAA,CAAAf,IAAA,CAAAA,IAAA;MACA;IACA;IACAgB,KAAA;MACA;MACA;MACA;MACA,IAAAC,CAAA,GAAAC,QAAA,CAAAC,aAAA;MACA;MACAF,CAAA,CAAAG,IAAA,YAAAlB,QAAA,CAAAmB,OAAA;MACAJ,CAAA,CAAAK,QAAA,WAAApB,QAAA,CAAAqB,QAAA;MACAN,CAAA,CAAAO,KAAA,CAAAC,OAAA;MACAP,QAAA,CAAAQ,IAAA,CAAAC,WAAA,CAAAV,CAAA;MACAA,CAAA,CAAAW,KAAA;MACAX,CAAA,CAAAY,MAAA;MACA;MACA;IACA;IACAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}