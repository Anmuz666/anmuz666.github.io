{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { AMapManager } from \"vue-amap\";\nlet amapManager = new AMapManager();\nexport default {\n  data() {\n    let self = this;\n    return {\n      amapManager,\n      markers: [],\n      center: [121.329402, 31.228667],\n      zoom: 17,\n      lng: 0,\n      lat: 0,\n      loaded: false,\n      events: {},\n      // 一些工具插件\n      plugin: [{\n        // 定位\n        pName: \"Geolocation\",\n        events: {\n          init(o) {\n            // o是高德地图定位插件实例\n            o.getCurrentPosition((status, result) => {\n              if (result && result.position) {\n                if (self.isEdit) {\n                  // 设置经度\n                  self.lng = self.longitude;\n                  // 设置维度\n                  self.lat = self.latitude;\n                  // 设置坐标\n                  self.center = [self.longitude, self.latitude];\n                  self.markers.push([self.longitude, self.latitude]);\n                } else {\n                  // 设置经度\n                  self.lng = result.position.lng;\n                  // 设置维度\n                  self.lat = result.position.lat;\n                  // 设置坐标\n                  self.center = [self.lng, self.lat];\n                  self.markers.push([self.lng, self.lat]);\n                }\n                // load\n                self.loaded = true;\n                // 页面渲染好后\n                self.$nextTick();\n              }\n            });\n          }\n        }\n      }]\n    };\n  },\n  created() {\n    VueAMap.getLocalCity().then(res => {\n      console.log(res);\n    });\n  },\n  methods: {}\n};","map":{"version":3,"names":["AMapManager","amapManager","data","self","markers","center","zoom","lng","lat","loaded","events","plugin","pName","init","o","getCurrentPosition","status","result","position","isEdit","longitude","latitude","push","$nextTick","created","VueAMap","getLocalCity","then","res","console","log","methods"],"sources":["src/views/map/vueAmap/index.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100%;width:100%\">\r\n    <!--\r\n        amap-manager： 地图管理对象\r\n        vid：地图容器节点的ID\r\n        zooms： 地图显示的缩放级别范围，在PC上，默认范围[3,18]，取值范围[3-18]；在移动设备上，默认范围[3-19]，取值范围[3-19]\r\n        center： 地图中心点坐标值\r\n        plugin：地图使用的插件\r\n        events： 事件\r\n    -->\r\n    <div class=\"amap-box\">\r\n      <el-amap\r\n        :amap-manager=\"amapManager\"\r\n        :vid=\"'amap-vue'\"\r\n        :zoom=\"zoom\"\r\n        :plugin=\"plugin\"\r\n        :center=\"center\"\r\n        :events=\"events\"\r\n      ></el-amap>\r\n    </div>\r\n  </div>\r\n</template>\r\n  <script>\r\nimport { AMapManager } from \"vue-amap\";\r\nlet amapManager = new AMapManager();\r\nexport default {\r\n  data() {\r\n    let self = this;\r\n    return {\r\n      amapManager,\r\n      markers: [],\r\n      center: [121.329402, 31.228667],\r\n      zoom: 17,\r\n      lng: 0,\r\n      lat: 0,\r\n      loaded: false,\r\n      events: {},\r\n      // 一些工具插件\r\n      plugin: [\r\n        {\r\n          // 定位\r\n          pName: \"Geolocation\",\r\n          events: {\r\n            init(o) {\r\n              // o是高德地图定位插件实例\r\n              o.getCurrentPosition((status, result) => {\r\n                if (result && result.position) {\r\n                  if (self.isEdit) {\r\n                    // 设置经度\r\n                    self.lng = self.longitude;\r\n                    // 设置维度\r\n                    self.lat = self.latitude;\r\n                    // 设置坐标\r\n                    self.center = [self.longitude, self.latitude];\r\n                    self.markers.push([self.longitude, self.latitude]);\r\n                  } else {\r\n                    // 设置经度\r\n                    self.lng = result.position.lng;\r\n                    // 设置维度\r\n                    self.lat = result.position.lat;\r\n                    // 设置坐标\r\n                    self.center = [self.lng, self.lat];\r\n                    self.markers.push([self.lng, self.lat]);\r\n                  }\r\n                  // load\r\n                  self.loaded = true;\r\n                  // 页面渲染好后\r\n                  self.$nextTick();\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    VueAMap.getLocalCity().then(res=>{\r\n        console.log(res)\r\n    })\r\n  },\r\n  methods: {}\r\n};\r\n</script>\r\n  <style >\r\n.tip-box {\r\n  width: 100%;\r\n  max-height: 280px;\r\n  position: absolute;\r\n  top: 72px;\r\n  z-index: 10000;\r\n  overflow-y: auto;\r\n  background-color: #fff;\r\n}\r\n</style>\r\n  <style>\r\n.amap-ui-poi-picker-sugg,\r\n.amap_lib_placeSearch {\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n}\r\n.amap-box {\r\n  height: 100%;\r\n}\r\n</style>"],"mappings":";AAuBA,SAAAA,WAAA;AACA,IAAAC,WAAA,OAAAD,WAAA;AACA;EACAE,KAAA;IACA,IAAAC,IAAA;IACA;MACAF,WAAA;MACAG,OAAA;MACAC,MAAA;MACAC,IAAA;MACAC,GAAA;MACAC,GAAA;MACAC,MAAA;MACAC,MAAA;MACA;MACAC,MAAA,GACA;QACA;QACAC,KAAA;QACAF,MAAA;UACAG,KAAAC,CAAA;YACA;YACAA,CAAA,CAAAC,kBAAA,EAAAC,MAAA,EAAAC,MAAA;cACA,IAAAA,MAAA,IAAAA,MAAA,CAAAC,QAAA;gBACA,IAAAf,IAAA,CAAAgB,MAAA;kBACA;kBACAhB,IAAA,CAAAI,GAAA,GAAAJ,IAAA,CAAAiB,SAAA;kBACA;kBACAjB,IAAA,CAAAK,GAAA,GAAAL,IAAA,CAAAkB,QAAA;kBACA;kBACAlB,IAAA,CAAAE,MAAA,IAAAF,IAAA,CAAAiB,SAAA,EAAAjB,IAAA,CAAAkB,QAAA;kBACAlB,IAAA,CAAAC,OAAA,CAAAkB,IAAA,EAAAnB,IAAA,CAAAiB,SAAA,EAAAjB,IAAA,CAAAkB,QAAA;gBACA;kBACA;kBACAlB,IAAA,CAAAI,GAAA,GAAAU,MAAA,CAAAC,QAAA,CAAAX,GAAA;kBACA;kBACAJ,IAAA,CAAAK,GAAA,GAAAS,MAAA,CAAAC,QAAA,CAAAV,GAAA;kBACA;kBACAL,IAAA,CAAAE,MAAA,IAAAF,IAAA,CAAAI,GAAA,EAAAJ,IAAA,CAAAK,GAAA;kBACAL,IAAA,CAAAC,OAAA,CAAAkB,IAAA,EAAAnB,IAAA,CAAAI,GAAA,EAAAJ,IAAA,CAAAK,GAAA;gBACA;gBACA;gBACAL,IAAA,CAAAM,MAAA;gBACA;gBACAN,IAAA,CAAAoB,SAAA;cACA;YACA;UACA;QACA;MACA;IAEA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,YAAA,GAAAC,IAAA,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;EACA;EACAG,OAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}