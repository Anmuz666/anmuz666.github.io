{"ast":null,"code":"import axios from \"axios\";\nimport APlayer from \"vue-aplayer\";\nexport default {\n  name: \"DefaultLayout\",\n  components: {\n    APlayer\n  },\n  data() {\n    return {\n      // 音频列表\n      aplayer: {\n        mini: true,\n        //false，迷你模式\n        float: true,\n        //false，浮动模式。允许在页面随意拖放播放器\n        showLrc: true,\n        //false,是否显示歌词\n        mutex: true,\n        //true,是否在该播放器播放时暂停其他播放器\n        theme: '#41b883',\n        //主题色。如果当前歌曲也设置了 theme 则以歌曲的为准\n        shuffle: false,\n        //false,随机播放\n        repeat: 'no-repeat',\n        //轮播模式。值可以是 'repeat-one'（单曲循环）、'repeat-all'（列表循环）或者 'no-repeat'（不循环）\n        listFolder: false //默认收起播放列表\n      },\n      musicList: [],\n      isShow: false\n    };\n  },\n  created() {},\n  mounted() {\n    this.getMusic();\n  },\n  beforeDestroy() {\n    this.isShow = false;\n  },\n  methods: {\n    getMusic() {\n      this.$nextTick(() => {\n        axios.get(\"/musicList/index.json\").then(res => {\n          console.log(res.data, \"responseresponseresponse\");\n          this.musicList = res.data.musicList;\n          // 如果不使用 v-if，会导致播放器已经渲染好了才给值，那自动播放会失效\n          this.isShow = true;\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","APlayer","name","components","data","aplayer","mini","float","showLrc","mutex","theme","shuffle","repeat","listFolder","musicList","isShow","created","mounted","getMusic","beforeDestroy","methods","$nextTick","get","then","res","console","log"],"sources":["src/views/test/listening.vue"],"sourcesContent":["<template>\r\n  <a-player\r\n    v-if=\"isShow\"\r\n    :music=\"musicList[0]\"\r\n    :list=\"musicList\"\r\n    :mini=\"aplayer.mini\"\r\n    :float=\"aplayer.float\"\r\n    :showlrc=\"true\"\r\n    :mutex=\"true\"\r\n    :shuffle=\"false\"\r\n    autoplay\r\n    mode=\"circulation\"\r\n    repeat=\"repeat-all\"\r\n    :style=\"{ top: '80vh'}\"\r\n  />\r\n</template>\r\n \r\n<script>\r\nimport axios from \"axios\";\r\nimport APlayer from \"vue-aplayer\";\r\n\r\nexport default {\r\n  name: \"DefaultLayout\",\r\n  components: { APlayer },\r\n  data() {\r\n    return {\r\n      // 音频列表\r\n      aplayer:{\r\n        mini:true,//false，迷你模式\r\n        float:true,//false，浮动模式。允许在页面随意拖放播放器\r\n        showLrc:true,//false,是否显示歌词\r\n        mutex:true,//true,是否在该播放器播放时暂停其他播放器\r\n        theme:'#41b883',//主题色。如果当前歌曲也设置了 theme 则以歌曲的为准\r\n        shuffle:false,//false,随机播放\r\n        repeat:'no-repeat',//轮播模式。值可以是 'repeat-one'（单曲循环）、'repeat-all'（列表循环）或者 'no-repeat'（不循环）\r\n        listFolder:false,//默认收起播放列表\r\n      },\r\n      musicList: [],\r\n      isShow: false\r\n    };\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    this.getMusic();\r\n  },\r\n  beforeDestroy() {\r\n    this.isShow = false;\r\n  },\r\n  methods: {\r\n    getMusic() {\r\n      this.$nextTick(() => {\r\n        axios.get(\"/musicList/index.json\").then(res => {\r\n          console.log(res.data, \"responseresponseresponse\");\r\n          this.musicList = res.data.musicList;\r\n          // 如果不使用 v-if，会导致播放器已经渲染好了才给值，那自动播放会失效\r\n          this.isShow = true;\r\n        });\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAkBA,OAAAA,KAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACA;MACAC,OAAA;QACAC,IAAA;QAAA;QACAC,KAAA;QAAA;QACAC,OAAA;QAAA;QACAC,KAAA;QAAA;QACAC,KAAA;QAAA;QACAC,OAAA;QAAA;QACAC,MAAA;QAAA;QACAC,UAAA;MACA;MACAC,SAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,cAAA;IACA,KAAAJ,MAAA;EACA;EACAK,OAAA;IACAF,SAAA;MACA,KAAAG,SAAA;QACArB,KAAA,CAAAsB,GAAA,0BAAAC,IAAA,CAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAApB,IAAA;UACA,KAAAU,SAAA,GAAAU,GAAA,CAAApB,IAAA,CAAAU,SAAA;UACA;UACA,KAAAC,MAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}